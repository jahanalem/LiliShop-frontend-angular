/*
* ===================================================
*    Custom Bootstrapious Utils
* ===================================================
*/

/*
   Text utils
   ------------------------
*/

.text-uppercase {
    @include uppercase;
    letter-spacing: 0;
}

.text-sm {
    font-size: 0.9rem;
}

.text-xs {
    font-size: 0.7rem;
}

.text-base {
    font-size: $font-size-base;
}

.text-lg {
    font-size: $font-size-lg;
}


.text-shadow {
    text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);
}

.text-shadow-primary {
    text-shadow: 2px 2px 2px rgba($primary, .1);
}

.text-decoration-underline {
    text-decoration: underline;
}

.text-inherit {
    color: inherit;
}

/*
    Rounded corners - lg, sm
   ------------------------
*/

.rounded-lg {
    border-radius: $border-radius-lg;
}

.rounded-top-lg {
    border-top-left-radius: 1rem !important;
    border-top-right-radius: 1rem !important;
}
.rounded-bottom-lg {
    border-bottom-left-radius: 1rem !important;
    border-bottom-right-radius: 1rem !important;
}

.rounded-sm {
    border-radius: $border-radius-sm;
}

.rounded-xl {
    border-radius: 10rem;
}

/*
    Responsive borders - border-[breakpoint]
   ------------------------
*/
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .border#{$infix} {
            border: $border-width solid $border-color !important;
        }

        .nav#{$infix}-center {
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
            width: 100%;
            display: flex;
            justify-content: center;
            padding: 2rem 0;
            z-index: 9999;

            .dropdown-menu {
                position: relative;
                z-index: 9999;
            }
        }
    }
}

/*
    Opacity helpers - .opacity-[1-9]
    ------------------------
*/


$opacity: 1 2 3 4 5 6 7 8 9 10;

@each $current-opacity in $opacity {
    .opacity-#{$current-opacity} {
        opacity: #{$current-opacity/10};
    }
}

/*
    Z-index helpers - .z-index-[10-50]
    ------------------------
*/

$z-index: 10 20 30 40 50;

@each $current-z-index in $z-index {
    .z-index-#{$current-z-index} {
        z-index: #{$current-z-index};
    }
}

/*
     Letter spacing helpers - .letter-spacing-[0-5]
    ------------------------
*/

.letter-spacing-0 {
    letter-spacing: 0 !important;
}

$spacing: .1em .2em .3em .4em .5em;

@each $current-spacing in $spacing {
    $i: index($spacing, $current-spacing);

    .letter-spacing-#{$i} {
        letter-spacing: #{$current-spacing};
    }
}

/*
     Colours and backgrounds
    ------------------------
*/


@each $color,
$value in $theme-colors {
    .text-hover-#{$color} {
        transition: $transition-base;

        &:focus,
        &:hover {
            color: $value !important;
        }
    }

    a.text-hover-#{$color} {
        transition: $transition-base;

        &:focus,
        &:hover {
            color: $value !important;
        }
    }

    .bg-#{$color}-light {
        background-color: theme-color-level($color, -11);
    }

    .border-#{$color} {
        border-color: $value !important;
    }
}

@each $color,
$value in $grays {
    .bg-gray-#{$color} {
        background: $value !important;
    }

    .text-gray-#{$color} {
        color: $value;
    }
}

@each $color,
$value in $theme-colors {
    .badge-#{$color}-light {
        color: $value;
        background-color: theme-color-level($color, -11);
    }
}

/*
     Transparent overlays
    ------------------------
*/

.overlay-content {
    position: relative;
    z-index: 20;
}

@each $breakpoint in map-keys($grid-breakpoints) {
    $next: breakpoint-next($breakpoint, $grid-breakpoints);
    $infix: breakpoint-infix($next, $grid-breakpoints);

    .light-overlay#{$infix},
    .overlay-hover-light#{$infix} {
        @include media-breakpoint-up($next) {
            position: relative;

            &::after {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                content: ' ';
                background: #fff;
            }
        }
    }

    .overlay-hover-light#{$infix} {
        @include media-breakpoint-up($next) {
            &::after {
                transition: $transition-fade;
                opacity: 0;
            }
        }
    }

    .light-overlay#{$infix},
    .overlay-hover-light#{$infix}:hover {
        @include media-breakpoint-up($next) {
            &::after {
                opacity: .4;
            }
        }
    }

    .light-overlay#{$infix}-0,
    .overlay-hover-light#{$infix}-0:hover {
        @include media-breakpoint-up($next) {
            &::after {
                display: none;
            }
        }
    }

    .dark-overlay#{$infix} {
        position: relative;

        @include media-breakpoint-up($next) {
            &::after {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                content: ' ';
                opacity: .4;
                background: #000;
            }
        }
    }

    .dark-overlay#{$infix}-0 {
        @include media-breakpoint-up($next) {
            &::after {
                display: none;
            }
        }
    }
}


@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .border#{$infix}-top {      border-top: $border-width solid $border-color }
    .border#{$infix}-end {    border-right: $border-width solid $border-color }
    .border#{$infix}-bottom {   border-bottom: $border-width solid $border-color }
    .border#{$infix}-start {     border-left: $border-width solid $border-color }

    .border#{$infix}-top-0 {    border-top: 0 !important; }
    .border#{$infix}-end-0 {  border-right: 0 !important; }
    .border#{$infix}-bottom-0 { border-bottom: 0 !important; }
    .border#{$infix}-start-0 {   border-left: 0 !important; }
  }
}


@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .rounded#{$infix}-pill {  border-radius: 30rem }
  }
}



@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $color,
    $value in $theme-colors {
        .list-separated#{$infix}-#{$color} {

            &.nav-pills {
                li {
                    padding-left: 0;
                }
            }

            li + li {
                position: relative;
                padding-left: 0.8rem;

                &::after {
                    content: '';
                    width: 1px;
                    height: 1rem;
                    background: $value;
                    position: absolute;
                    top: 50%;
                    transform: translateY(-50%);
                    left: -1px;
                    display: block;
                    opacity: 0.7;
                }

                &.active {
                    &::after {
                        display: none;
                    }
                }
            }
        }
    }

  }
}


/*
     Other
    ------------------------
*/

.overflow-visible {
    overflow: visible !important;
}

.shadow-0 {
    box-shadow: none !important;
}

.reset-anchor {
    color: inherit;
    text-decoration: none;
    transition: all 0.3s;

    &:hover, &:focus {
        text-decoration: none;
        color: $primary;
    }
}

.bg-cover {
    background-size: cover !important;
}

.bg-center {
    background-position: center center !important;
}

.bg-none {
    background: none !important;
}

.shadow-0 {
    box-shadow: 0 !important;

    &:focus {
        box-shadow: 0 !important;
    }
}

.h-auto {
    height: auto !important;
}

.text-superbig {
    font-size: 8rem;
    @include media-breakpoint-up(lg) {
        font-size: 15rem;
    }
}

.heading-lg {
    @include media-breakpoint-up(lg) {
        font-size: 3.5rem;
    }
}

[class^="icon-"]:before, [class*=" icon-"]::before {
    display: inline-block;
    transform: translateY(2px);
}

.text-shadow {
    text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);
}

.no-hover {
    &:hover, &:focus {
        background: none !important;
        color: inherit !important;
    }
}

.no-caret {
    &::after {
        display: none;
    }
}


@each $color,
$value in $theme-colors {
    .badge-#{$color}-light {
        color: $value;
        background-color: theme-color-level($color, -11);
    }

    .ribbon-#{$color} {
        background: $value;
        &::before {
            border-top: 14px solid darken($value, 20%);
        }
    }
}


.ribbon {
    padding: 5px 15px;
    color: #fff;
    font-weight: 400;
    text-align: center;
    display: inline-block;
    position: relative;
    letter-spacing: 0.2em;
    position: absolute;
    top: 0;
    left: -12px;
    &::before {
        content: '';
        border-left: 12px solid transparent;
        border-right: 0 solid transparent;
        position: absolute;
        bottom: -14px;
        left: 0;
    }
}


.quantity {
    .inc-btn,
    .dec-btn {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        line-height: 30px;
        border: 1px solid #999;
        text-align: center;
        cursor: pointer;
        user-select: none !important;
        -webkit-user-select: none !important;
    }
    input {
        width: 30px;
        height: 30px;
        border: none;
        text-align: center;
        color: #333;
        font-weight: 400;
        line-height: 30px;
        outline: none
    }
}


.cart-outer {
    @include media-breakpoint-down(lg) {
        overflow: auto;
    }
}

.cart-inner {
    @include media-breakpoint-down(lg) {
        min-width: 991px;
    }
}

.bg-video {
    position: absolute;
    background: #fff;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.parallax-holder {
    padding-top: 15rem;
    padding-bottom: 15rem;
    overflow: hidden;
    position: relative;
}

.icon-rounded {
    width: 36px;
    height: 36px;
    border-radius: 50%;
    border: 1px solid $primary;
    display: flex;
    align-items: center;
    justify-content: center;
    color: $primary;

    &-lg {
        width: 48px;
        height: 48px;
    }

    &-xl {
        width: 80px;
        height: 80px;
        font-size: 1.7rem;
    }
}



.has-pattern {
    position: relative;
    z-index: 1;

    &::before {
        content: '';
        width: 100%;
        height: 100%;
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        background: url(../img/dots-pattern.png);
        background-size: 20%;
        z-index: -1;
        opacity: 0.05;
    }
}

.social-link-share {
    display: block;
    width: 35px;
    height: 35px;
    line-height: 35px;
    border-radius: 50%;
    border: 1px solid #bbb;
    color: #777;
    font-size: 0.9rem;
    transition: all 0.3s;

    &:hover {
        background: $primary;
        color: #fff;
        border-color: $primary;
    }
}

.shop-page {
  background-color: var(--app-content-bg, #f4f7fa);
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.mobile-controls {
  display: flex; // Will be hidden on desktop by *ngIf="isMobileScreen()"
  justify-content: flex-start; // Align single button to the start
  align-items: center;
  margin-bottom: 1.5rem;
  padding: 0 1rem; // Consistent with page container padding

  .toggle-filters-button {
    min-width: auto; // Allow button to size naturally
    padding: 0 12px;
    mat-icon {
      margin-right: 8px;
    }
  }
}

.shop-content-wrapper {
  display: flex;
  gap: 2rem; // Space between filters and products on desktop
  position: relative; // For mobile filter backdrop positioning
}

.filters-panel {
  // Desktop styles (default)
  flex: 0 0 280px; // Fixed width for filter panel
  background-color: var(--app-surface-bg, white);
  border-radius: var(--app-border-radius, 0.5rem);
  padding: 1.5rem;
  box-shadow: 0 1px 3px rgba(0,0,0,0.05), 0 2px 8px rgba(0,0,0,0.03); // Softer shadow
  align-self: flex-start;
  height: fit-content;

  &__header { // Mobile only header for the filter panel
    display: none; // Hidden on desktop by default HTML structure (*ngIf)
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--app-border-color, #e0e0e0);
    h3 {
      margin: 0;
      font-size: 1.15rem;
      font-weight: 600;
      color: var(--app-text-color, #333);
    }
    button.mat-mdc-icon-button {
        color: var(--app-text-color-light, #555);
    }
  }

  &__content {
    // No specific styles needed here if padding is on .filters-panel for desktop
    // and on .filters-panel__content for mobile (see mobile styles)
  }
}

.filter-group {
  margin-bottom: 2rem;
  box-shadow: none !important;
  background-color: transparent !important;

  &:last-child {
    margin-bottom: 0;
  }

  &__title {
    font-size: 1rem; // Or 0.9rem for a more subtle title
    font-weight: 600; // Or 500
    color: var(--app-text-color, #333);
    margin-bottom: 1rem;
    padding: 0 !important;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .mat-mdc-card-content {
    padding: 0 !important;
  }

  .filter-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--app-text-color-light, #555);
    margin-bottom: 0.5rem;
    margin-top: 1rem;
    &:first-of-type { // First label in a group doesn't need top margin if title provides space
        margin-top: 0;
    }
  }

  .mat-mdc-form-field {
    margin-bottom: 0.75rem; // Space between form fields
     .mat-mdc-form-field-subscript-wrapper { // Hide default bottom space unless errors are shown
        display: none;
    }
  }
}

.search-field.mat-mdc-form-field { // More specific selector
  margin-bottom: 0 !important;
}

.filter-actions { // Desktop "Clear All Filters" button container
    margin-top: 2rem;
    margin-top: 0;
    margin-bottom: 2px;
    .clear-all-button.mat-mdc-stroked-button {
        width: 100%; // Make button full width of filter panel
    }
}

.products-area {
  flex: 1;
  min-width: 0;
}

.products-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

.product-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
  gap: 1.75rem;
}

.no-products-message {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem 1rem;
  text-align: center;
  color: var(--app-text-color-light, #555);
  background-color: var(--app-surface-bg, white);
  border-radius: var(--app-border-radius, 0.5rem);
  min-height: 300px;
  border: 1px dashed var(--app-border-color, #e0e0e0); // Softer indicator

  .no-products-icon {
    font-size: 3.5rem;
    width: 3.5rem;
    height: 3.5rem;
    color: var(--app-border-color, #e0e0e0);
    margin-bottom: 1rem;
  }
  p {
    font-size: 1.05rem;
    margin-bottom: 0.5rem;
    &:last-of-type {
        margin-bottom: 1.5rem;
        font-size: 0.9rem;
    }
  }
  button.mat-mdc-stroked-button { // Style the clear filters button
    // Use default stroked button styles or customize
  }
}

.pagination-controls {
  display: flex;
  justify-content: center;
  margin-top: 2.5rem;
  padding-bottom: 1rem;
}

// --- Mobile Specific Styles & Off-Canvas Filter ---
.filter-backdrop {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); // Slightly darker backdrop
  z-index: 1040; // Ensure it's below panel, above content
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease-in-out, visibility 0s linear 0.3s;

  &.filters-panel--visible-mobile {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.3s ease-in-out;
  }
}

// Tablet and Mobile Breakpoint (where filters become off-canvas)
@media (max-width: 992px) {
  .shop-content-wrapper {
    flex-direction: column; // Filters will be positioned fixed
  }

  .filters-panel {
    position: fixed;
    top: 0;
    left: 0; // Start off-screen
    transform: translateX(-100%); // Initially hidden off-screen to the left
    width: 300px; // Width of the mobile filter drawer
    max-width: 85vw; // Ensure it doesn't take full screen on slightly larger mobiles
    height: 100vh; // Full viewport height
    z-index: 1050; // Above backdrop
    transition: transform 0.3s ease-in-out;
    padding: 0; // Remove desktop padding, header/content will have their own
    border-radius: 0; // No border radius for full-height drawer
    border-right: 1px solid var(--app-border-color, #e0e0e0); // Border on the edge
    box-shadow: 0 0 15px rgba(0,0,0,0.15); // More distinct shadow for overlay

    &__header { // This is now visible due to *ngIf="isMobileScreen()" in HTML
      display: flex; // Ensure it's shown
      height: 56px; // Standard mobile header height
    }
    &__content {
      padding: 1rem;
      overflow-y: auto;
      height: calc(100% - 56px); // Full height minus header
    }

    &.filters-panel--visible-mobile {
      transform: translateX(0); // Slide in
    }
  }

  .products-area {
    padding-left: 0; // No left padding when filters are off-canvas
  }
   .product-grid {
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); // Adjust for smaller screens
    gap: 1rem;
  }
}

// Further adjustments for very small mobile screens
@media (max-width: 480px) {
  .mobile-controls {
    flex-direction: column;
    gap: 1rem;
    align-items: stretch; // Make button full width
    padding: 0 0.5rem; // Less padding on very small screens
  }
  .product-grid {
    // Example: 1 item per row, or keep 2 items with smaller minmax
    // grid-template-columns: 1fr;
    grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
    gap: 0.75rem;
  }
  .filters-panel {
    width: 280px; // Slightly narrower on very small screens
    max-width: calc(100vw - 40px); // Ensure some margin
  }
}

// shop.component.scss

// Style for the placeholder grid container
.product-grid-placeholder {
  display: grid;
  // Use the same grid layout as your real .product-grid
  grid-template-columns: repeat(3, 1fr);
  gap: 16px; // Use the same gap as your real grid
}

// Style for a single skeleton item
.product-item-skeleton {
  background-color: #e0e0e0; // A light grey background
  border-radius: 8px;      // Match your mat-card border-radius
  height: 420px;           // Give it a fixed height similar to your real product card
  overflow: hidden;        // Important for the shimmer effect
  position: relative;      // Important for the shimmer effect

  // This creates the "shimmer" or "wipe" animation
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
    animation: shimmer 1.5s infinite;
  }
}

// The animation keyframes
@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

// Style for the loading spinner container
.loading-spinner-container {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 48px; // Give it some space
}